1.INPUT

<?php
$capital = 67;
print("Variable capital is $capital<br>");
print("Variable CaPiTaL is $CaPiTaL");
?>

OUTPUT

Variable capital is 67
Variable CaPiTaL is 


2.Create a PHP program to display the division table using for-loop.
1 2 3
1 1 0.5 0.33
2 2 1 0.66
3 3 1.5 1

OUTPUT
<?php
$size = 3;
for ($i = 1; $i <= $size; $i++) {
    echo "$i ";
}
echo "\n";
for ($i = 1; $i <= $size; $i++) {
    echo "$i ";
    for ($j = 1; $j <= $size; $j++) {
        $result = round($i / $j, 2);
        echo "$result ";
    }
    echo "\n";
}
?>

3.Predict the output of the following snippet:
$animal = “antelope”; $animal_heads = 1; $animal_legs = 4;
echo“The $animal has $animal_heads head(s).”;
echo“The $animal has $animal_legs leg(s).”;

Output:
The antelope has 1 head(s).
The antelope has 4 leg(s).

5.You are building a website where users can calculate the total cost of their purchases.
Write a PHP program that takes the price and quantity of three items from the user and
calculates the subtotal, tax (10% of the subtotal),and the total cost (subtotal + tax).
Display the results to the user.
INPUT:
<?php
// Item 1
$price1 = 50;
$qty1 = 2;

// Item 2
$price2 = 30;
$qty2 = 3;

// Item 3
$price3 = 20;
$qty3 = 1;

// Calculate subtotal
$subtotal = ($price1 * $qty1) + ($price2 * $qty2) + ($price3 * $qty3);

// Calculate tax (10%)
$tax = $subtotal * 0.10;

// Total cost
$total = $subtotal + $tax;

// Output
echo "Item 1: ₹$price1 × $qty1 = ₹" . ($price1 * $qty1) . "\n";
echo "Item 2: ₹$price2 × $qty2 = ₹" . ($price2 * $qty2) . "\n";
echo "Item 3: ₹$price3 × $qty3 = ₹" . ($price3 * $qty3) . "\n\n";

echo "Subtotal: ₹" . number_format($subtotal, 2) . "\n";
echo "Tax (10%): ₹" . number_format($tax, 2) . "\n";
echo "Total Cost: ₹" . number_format($total, 2) . "\n";
?>

OUTPUT:
Item 1: ₹50 × 2 = ₹100
Item 2: ₹30 × 3 = ₹90
Item 3: ₹20 × 1 = ₹20

Subtotal: ₹210.00
Tax (10%): ₹21.00
Total Cost: ₹231.00


=== Code Execution Successful ===

8. A customer visits a shop to buy a soft drink; he has two options:
Drink A cost is Rs.25 and the size of the bottle is 11.
Drink B cost is Rs.23 and its size of the bottle is 9.

<?php
function deal() {
    $costA = 25;
    $sizeA = 11;
    $costB = 23;
    $sizeB = 9;

    $unitPriceA = $costA / $sizeA; // cost per ml for A
    $unitPriceB = $costB / $sizeB; // cost per ml for B

    echo "Drink A: ₹$costA for $sizeA units → ₹" . round($unitPriceA, 2) . " per unit<br>";
    echo "Drink B: ₹$costB for $sizeB units → ₹" . round($unitPriceB, 2) . " per unit<br><br>";

    if ($unitPriceA < $unitPriceB) {
        echo "➡️ Choose Drink A to save money.";
    } elseif ($unitPriceB < $unitPriceA) {
        echo "➡️ Choose Drink B to save money.";
    } else {
        echo "Both drinks offer the same value.";
    }
}

deal();
?>


OUTPUT:
Drink A: ₹25 for 11 units → ₹2.27 per unit  
Drink B: ₹23 for 9 units → ₹2.56 per unit  
Choose Drink A to save money.

9.Predict the output of the following snippet:

$this = “this”; $that = “that”; $the_other = 2.2000000000;
print(“$this,$not_set,$that+$the_other”);

CORRECTED INPUT:
$this = "this";
$that = "that";
$the_other = 2.2000000000;
print("$this,$not_set,$that+$the_other");

OUTPUT:0
this,,that+2.2

10. Develop a program to check student grades based on marks using a loop.
<?php
if (isset($_SERVER["REQUEST_METHOD"]) && $_SERVER["REQUEST_METHOD"] === "POST") {
    $names = $_POST['name'];
    $marks = $_POST['marks'];

    for ($i = 0; $i < count($names); $i++) {
        $grade = "";
        if ($marks[$i] >= 90) {
            $grade = "A";
        } elseif ($marks[$i] >= 80) {
            $grade = "B";
        } elseif ($marks[$i] >= 70) {
            $grade = "C";
        } elseif ($marks[$i] >= 60) {
            $grade = "D";
        } else {
            $grade = "F";
        }

        echo $names[$i] . " - Marks: " . $marks[$i] . " - Grade: " . $grade . "<br>";
    }
} else {
    ?>
    <form method="post">
        <h3>Enter Student Marks</h3>
        Student 1: <input type="text" name="name[]" placeholder="Name">
        Marks: <input type="number" name="marks[]" min="0" max="100"><br><br>

        Student 2: <input type="text" name="name[]" placeholder="Name">
        Marks: <input type="number" name="marks[]" min="0" max="100"><br><br>

        Student 3: <input type="text" name="name[]" placeholder="Name">
        Marks: <input type="number" name="marks[]" min="0" max="100"><br><br>

        <input type="submit" value="Check Grades">
    </form>
    <?php
}
?>


11.Develop a PHP program to show days of the week using switch cases.

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $dayNumber = $_POST['day'];

    switch ($dayNumber) {
        case 1:
            $message = "Today is Monday";
            break;
        case 2:
            $message = "Today is Tuesday";
            break;
        case 3:
            $message = "Today is Wednesday";
            break;
        case 4:
            $message = "Today is Thursday";
            break;
        case 5:
            $message = "Today is Friday";
            break;
        case 6:
            $message = "Today is Saturday";
            break;
        case 7:
            $message = "Today is Sunday";
            break;
        default:
            $message = "Invalid number! Please enter a number between 1 and 7.";
    }

    echo "<h3>$message</h3>";
}
?>

<form method="post">
    Enter a number (1-7): 
    <input type="number" name="day" min="1" max="7" required>
    <input type="submit" value="Show Day">
</form>

12. Write a program to check student grade based on marks:
Conditions:
If marks are 75% or more, the grade will be First Class.
If marks between 60% to 74%, grade will be second class.
If marks between 40% to 59%, grade will be third class.
If marks are less than 40%, students will be Fail.


<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $marks = $_POST['marks'];

    if ($marks >= 75) {
        $grade = "First Class";
    } elseif ($marks >= 60 && $marks <= 74) {
        $grade = "Second Class";
    } elseif ($marks >= 40 && $marks <= 59) {
        $grade = "Third Class";
    } else {
        $grade = "Fail";
    }

    echo "<h3>Marks: $marks% - Grade: $grade</h3>";
}
?>

<form method="post">
    Enter Marks (%): 
    <input type="number" name="marks" min="0" max="100" required>
    <input type="submit" value="Check Grade">
</form>


14.Show a form with input fields for a user's name, email, and message. When the form is
submitted, display a confirmation message on the same page with the user's name and
email.


<?php
// Check if the form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = trim($_POST['name']);
    $email = trim($_POST['email']);
    $message = trim($_POST['message']);

    if (!empty($name) && !empty($email) && !empty($message)) {
        echo "<h3>Form Submitted Successfully!</h3>";
        echo "Thank you, <b>$name</b>. We have received your message.<br>";
        echo "A confirmation has been sent to: <b>$email</b><br><br>";
        echo "<a href=''>Go Back</a>";
    } else {
        echo "<p style='color:red;'>Please fill in all fields.</p>";
        showForm();
    }
} else {
    showForm();
}

// Function to display the form
function showForm() {
    echo '
    <form method="post">
        <h3>Contact Form</h3>
        Name: <input type="text" name="name"><br><br>
        Email: <input type="email" name="email"><br><br>
        Message: <textarea name="message"></textarea><br><br>
        <input type="submit" value="Submit">
    </form>
    ';
}
?>


15. Create a PHP program to compute the sum of the digits of a number.
<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $number = $_POST['number'];
    $sum = 0;

    // Calculate sum of digits
    $temp = $number;
    while ($temp > 0) {
        $digit = $temp % 10; 
        $sum += $digit;
        $temp = (int)($temp / 10);
    }

    echo "The sum of digits of $number is: $sum";
}
?>

<form method="post">
    Enter a number: <input type="number" name="number" required>
    <input type="submit" value="Calculate Sum">
</form>

16.Write a PHP function that takes two numbers as input and returns the sum of those
numbers. Display the result on the webpage, when a button is clicked.
<?php
function addNumbers($num1, $num2) {
    return $num1 + $num2;
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $number1 = $_POST['number1'];
    $number2 = $_POST['number2'];
    $sum = addNumbers($number1, $number2);
    echo "<h3>The sum of $number1 and $number2 is: $sum</h3>";
}
?>

<form method="post">
    Enter first number: <input type="number" name="number1" required><br><br>
    Enter second number: <input type="number" name="number2" required><br><br>
    <input type="submit" value="Calculate Sum">
</form>

17.Examine the various control structures in php and construct a bank transaction problem
with customers deposit and withdrawal of amount.

<?php
$balance = 1000; // Initial account balance

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $action = $_POST['action'];
    $amount = $_POST['amount'];

    if ($amount <= 0) {
        echo "<p style='color:red;'>Amount must be greater than 0.</p>";
    } else {
        switch ($action) {
            case "deposit":
                $balance += $amount;
                echo "<p style='color:green;'>Deposited Rs. $amount successfully.</p>";
                echo "<p>Current Balance: Rs. $balance</p>";
                break;

            case "withdraw":
                if ($amount > $balance) {
                    echo "<p style='color:red;'>Insufficient balance! Withdrawal failed.</p>";
                } else {
                    $balance -= $amount;
                    echo "<p style='color:blue;'>Withdrawn Rs. $amount successfully.</p>";
                    echo "<p>Current Balance: Rs. $balance</p>";
                }
                break;

            default:
                echo "<p style='color:red;'>Invalid transaction type.</p>";
        }
    }
}
?>

<h2>Bank Transaction</h2>
<form method="post">
    Enter Amount: <input type="number" name="amount" required><br><br>
    Choose Transaction:
    <select name="action">
        <option value="deposit">Deposit</option>
        <option value="withdraw">Withdraw</option>
    </select><br><br>
    <input type="submit" value="Submit">
</form>


18.IsSet() function in PHP with example.
The isset() function checks if a variable is set and not null.
<?php
$name = "Madhunisha";

if (isset($name)) {
    echo "The variable 'name' is set.";
} else {
    echo "The variable 'name' is not set.";
}
?>
Output:
The variable 'name' is set.

19.Examine a PHP function that accepts an array of numbers and returns the highest and
lowest values in that array. Display the results on the webpage.
<?php
function findHighLow($numbers) {
    $highest = max($numbers);
    $lowest = min($numbers);
    return array("highest" => $highest, "lowest" => $lowest);
}

$numbers = array(25, 78, 12, 98, 44, 63);
$result = findHighLow($numbers);

echo "Highest Value: " . $result["highest"] . "<br>";
echo "Lowest Value: " . $result["lowest"];
?>
OUTPUT:
Highest Value: 98  
Lowest Value: 12

20.Implement a contact form with validation to ensure all fields are filled out before
submission.

<?php
$name = $email = $message = "";
$error = "";

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (empty($_POST["name"]) || empty($_POST["email"]) || empty($_POST["message"])) {
        $error = "All fields are required!";
    } else {
        $name = htmlspecialchars($_POST["name"]);
        $email = htmlspecialchars($_POST["email"]);
        $message = htmlspecialchars($_POST["message"]);
        echo "Thank you, $name. We received your message.";
    }
}
?>

<form method="post" action="">
    Name: <input type="text" name="name" value="<?= $name ?>"><br><br>
    Email: <input type="email" name="email" value="<?= $email ?>"><br><br>
    Message:<br>
    <textarea name="message"><?= $message ?></textarea><br><br>
    <input type="submit" value="Submit">
</form>

<?php
if (!empty($error)) {
    echo "<p style='color:red;'>$error</p>";
}
?>


21.Construct a PHP function that checks if a given year is a leap year and returns true or
false accordingly.
<?php
function isLeapYear($year) {
    return ($year % 4 == 0 && $year % 100 != 0) || ($year % 400 == 0);
}

$year = 2024;

if (isLeapYear($year)) {
    echo "$year is a leap year.";
} else {
    echo "$year is not a leap year.";
}
?>

OUTPUT:
2024 is a leap year.


22. Create a PHP script that counts the number of occurrences of a specific word in a given
string.
<?php
$text = "The quick brown fox jumps over the lazy dog. The dog was not amused.";
$word = "the";

$count = substr_count(strtolower($text), strtolower($word));
echo "The word '$word' appears $count times.";
?>
OUTPUT:
The word 'the' appears 3 times.


23.Prioritize the use of GET and POST arguments in PHP with a real time example.
<html>
<head>
    <title>GET and POST Example</title>
</head>
<body>

<h2> Search Form (GET Method)</h2>
<form method="get" action="">
    Search: <input type="text" name="query">
    <input type="submit" name="searchBtn" value="Search">
</form>

<?php
// GET method handling
if (isset($_GET['searchBtn']) && !empty($_GET['query'])) {
    $search = htmlspecialchars($_GET['query']);
    echo "<p>You searched for: <strong>$search</strong></p>";
}
?>

<hr>

<h2> Login Form (POST Method)</h2>
<form method="post" action="">
    Username: <input type="text" name="username"><br><br>
    Password: <input type="password" name="password"><br><br>
    <input type="submit" name="loginBtn" value="Login">
</form>

<?php
// POST method handling
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['loginBtn'])) {
    $username = htmlspecialchars($_POST['username']);
    $password = htmlspecialchars($_POST['password']);

    // Example credentials
    if ($username == "admin" && $password == "1234") {
        echo "<p style='color:green;'>Welcome, <strong>$username</strong>!</p>";
    } else {
        echo "<p style='color:red;'>Invalid credentials.</p>";
    }
}
?>

</body>
</html>


24. Write a PHP script to manipulate the strings with all the string functions.
<?php
$str = " Hello PHP World! ";

// String manipulation
echo "Original: '$str'<br>";
echo "Trimmed: '" . trim($str) . "'<br>";
echo "Lowercase: " . strtolower($str) . "<br>";
echo "Uppercase: " . strtoupper($str) . "<br>";
echo "Length: " . strlen($str) . "<br>";
echo "Word count: " . str_word_count($str) . "<br>";
echo "Reversed: " . strrev($str) . "<br>";
echo "Position of 'PHP': " . strpos($str, "PHP") . "<br>";
echo "Replace 'World' with 'Universe': " . str_replace("World", "Universe", $str) . "<br>";
?>

25. Construct a PHP script to replace the first ‘the’ of the following string with ‘best’. Data:
“The Thing will come to you soon”
<?php
$sentence = "The Thing will come to you soon";
$modified = preg_replace('/the/i', 'best', $sentence, 1); // Case-insensitive replacement
echo $modified;
?>

27. Articulate the mathematical operators with suitable examples in PHP.
<?php
$a = 10;
$b = 3;

echo "Addition: " . ($a + $b) . "<br>";     // 13  
echo "Subtraction: " . ($a - $b) . "<br>";  // 7  
echo "Multiplication: " . ($a * $b) . "<br>"; // 30  
echo "Division: " . ($a / $b) . "<br>";     // 3.333...  
echo "Modulus: " . ($a % $b) . "<br>";      // 1  
echo "Exponent: " . ($a ** $b) . "<br>";    // 1000  
?>
28. Consider three variables $a, $b, $c, apply var_dump() function to evaluate if the values
are equal or not.
<?php
$a = 10;
$b = "10";
$c = 10;

var_dump($a == $b);  // true (value equal)
var_dump($a === $b); // false (type not equal)
var_dump($a === $c); // true (value and type equal)
?>


29. Infer the usage of the following PHP functions:
(i) rand() (ii) abs() (iii) strreplace() (iv) pi( ) (v) ceil()

<?php
echo "Random number (1-100): " . rand(1, 100) . "<br>";  // rand()
echo "Absolute value of -50: " . abs(-50) . "<br>";      // abs()
echo "Replace 'world' with 'PHP': " . str_replace("world", "PHP", "Hello world") . "<br>"; // str_replace()
echo "Value of pi: " . pi() . "<br>";                    // pi()
echo "Ceil of 4.3: " . ceil(4.3) . "<br>";               // ceil()
?>

30. Develop a PHP script that generates a random password consisting of a combination of
letters, numbers, and special characters.


<?php
function generatePassword($length = 12) {
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()';
    $password = '';
    for ($i = 0; $i < $length; $i++) {
        $password .= $chars[rand(0, strlen($chars) - 1)];
    }
    return $password;
}

echo "Random Password: " . generatePassword(12);
?>























































