71. Tell the different file handling modes available in PHP?
ANSWER:
<?php
// Q71: Demonstrating different file handling modes in PHP
$filename = "demo.txt";
// Creating a file with write mode
$file = fopen($filename, "w"); // "w" - write mode
fwrite($file, "Hello, this is a test file.\n");
fclose($file);
// Opening file in append mode
$file = fopen($filename, "a"); // "a" - append mode
fwrite($file, "Appending a new line.\n");
fclose($file);
// Opening file in read mode
$file = fopen($filename, "r"); // "r" - read mode
echo "Reading file contents:<br>";
while(!feof($file)) {
    echo fgets($file). "<br>";
}
fclose($file);
// Displaying file handling modes
echo "<br><b>Common File Modes in PHP:</b><br>";
echo "r  - Read only<br>";
echo "w  - Write only (truncates file)<br>";
echo "a  - Append only<br>";
echo "r+ - Read/Write<br>";
echo "w+ - Read/Write (truncates file)<br>";
echo "a+ - Read/Write (append)<br>";
?>
OUTPUT:
Reading file contents:
Hello, this is a test file.
Appending a new line.
Common File Modes in PHP:
r  - Read only
w  - Write only (truncates file)
a  - Append only
r+ - Read/Write
w+ - Read/Write (truncates file)
a+ - Read/Write (append)
72. Write the PHP program to implement the following session functions.
(i)session_register() (ii) session_unset() (iii) session_destroy()
ANSWER:
<?php
// Q72: Demonstrating session functions
session_start();
// Registering session variables
$_SESSION['username'] = "JohnDoe";
$_SESSION['role'] = "Admin";
echo "Session variables are set.<br>";
echo "Username: " . $_SESSION['username'] . "<br>";
echo "Role: " . $_SESSION['role'] . "<br>";
// Unset a session variable
session_unset(); // removes all session variables
echo "All session variables are removed.<br>";
// Destroying the session completely
session_destroy();
echo "Session destroyed.<br>";
?>
OUTPUT:Session variables are set.
Username: JohnDoe
Role: Admin
All session variables are removed.
Session destroyed.
73. Develop a PHP program to display an error message when a file other than jpg or png is uploaded
<?php
// Q73: File upload validation
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $file_type = strtolower(pathinfo($_FILES["file"]["name"], PATHINFO_EXTENSION));
    
    if ($file_type != "jpg" && $file_type != "png") {
        echo "Error: Only JPG and PNG files are allowed.";
    } else {
        echo "File uploaded successfully!";
    }
}
?>
<!-- HTML Upload Form -->
<form method="POST" enctype="multipart/form-data">
  Select file to upload:
  <input type="file" name="file" required>
  <input type="submit" value="Upload">
</form>
OUTPUT:
Output (case 1 - wrong file type):
Error: Only JPG and PNG files are allowed.
Output (case 2 - correct file type):
File uploaded successfully!
74. Outline the file reading and writing functions of PHP with suitable examples.
<?php
$file = "sample.txt";
// Writing to a file
file_put_contents($file, "This is the first line.\n", FILE_APPEND);
file_put_contents($file, "This is the second line.\n", FILE_APPEND);
// Reading file content
echo "<b>Reading file with file_get_contents:</b><br>";
echo nl2br(file_get_contents($file));
// Using fopen, fread, fwrite
$fp = fopen($file, "a+"); 
fwrite($fp, "Appending another line using fwrite.\n");
rewind($fp); // move pointer to beginning
echo "<br><b>Reading using fread:</b><br>";
echo nl2br(fread($fp, filesize($file)));
fclose($fp);
?>
OUTPUT:
Reading file with file_get_contents:
This is the first line.
This is the second line.
Reading using fread:
This is the first line.
This is the second line.
Appending another line using fwrite.
75. Build a PHP function that takes the filename and a new line of content as input. Append the new line of content as a new line at the end of the file.
<?php
function appendLineToFile($filename, $newLine) {
    $file = fopen($filename, "a"); // open in append mode
    fwrite($file, $newLine . "\n");
    fclose($file);
    echo "Line appended successfully.<br>";
}
// Usage
$file = "notes.txt";
appendLineToFile($file, "This is a new line.");
appendLineToFile($file, "Another line added.");
// Displaying file content
echo "<b>File Content:</b><br>";
echo nl2br(file_get_contents($file));
?>
Output:
Line appended successfully.
Line appended successfully.
File Content:
This is a new line.
Another line added.
76. Write a simple 'birthday countdown' script, the script will count the number of days between current day and birthday.
<?php
// Q76: Birthday Countdown Script
$today = date("Y-m-d");
$birthday = "2025-12-25"; // Example birthday
$diff = strtotime($birthday) - strtotime($today);
$days = floor($diff / (60*60*24));
echo "Today: $today <br>";
echo "Birthday: $birthday <br>";
echo "Days left for birthday: $days days";
?>
OUTPUT:
Today: 2025-08-16
Birthday: 2025-12-25
Days left for birthday: 131 days
77. Classify the various network functions which provide network information or functions.
<?php
// Q77: Demonstrating some network functions]
echo "IP Address of localhost: " . gethostbyname("localhost") . "<br>";
echo "Host name of 8.8.8.8: " . gethostbyaddr("8.8.8.8") . "<br>";
echo "Check if www.google.com is reachable: " . gethostbyname("www.google.com") . "<br>";
$server_ip = gethostbyname("example.com");
echo "IP of example.com: $server_ip<br>";
if (checkdnsrr("example.com", "MX")) {
    echo "example.com has a mail server.<br>";
} else {
    echo "example.com has no mail server.<br>";
}
?>
OUTPUT:
IP Address of localhost: 127.0.0.1
Host name of 8.8.8.8: dns.google
Check if www.google.com is reachable: 142.251.223.228
IP of example.com: 23.192.228.80
example.com has a mail server.
78. Elucidate the steps to read and delete existing cookies in the browser.
<?php
// Q78: Working with cookies

// Step 1: Set a cookie
setcookie("user", "Alice", time()+3600); // expires in 1 hour

// Step 2: Read a cookie
if(isset($_COOKIE['user'])) {
    echo "Cookie value: " . $_COOKIE['user'] . "<br>";
} else {
    echo "Cookie not set yet.<br>";
}

// Step 3: Delete a cookie
setcookie("user", "", time()-3600); // expired
echo "Cookie deleted.";
?>
OUTPUT:
Cookie not set yet.
Cookie deleted.
79. Create a PHP program to append two files in another file.
<?php
// Q79: Append contents of two files into a new file

$file1 = "file1.txt";
$file2 = "file2.txt";
$outputFile = "merged.txt";

// Create demo files
file_put_contents($file1, "This is content of file 1.\n");
file_put_contents($file2, "This is content of file 2.\n");

// Merge
$content = file_get_contents($file1) . file_get_contents($file2);
file_put_contents($outputFile, $content);

echo "Files merged successfully.<br>";
echo "<b>Merged File Content:</b><br>";
echo nl2br(file_get_contents($outputFile));
?>
OUTPUT:
Files merged successfully.
Merged File Content:
This is content of file 1.
This is content of file 2.
80. Build a test cookie with the setcookie( ) function using PHP. Give me big code and understanding the concept ,with the output.
<?php
// Q80: Setting and reading a test cookie
setcookie("TestCookie", "HelloCookie", time()+3600); // 1 hour expiry\
if(isset($_COOKIE['TestCookie'])) {
    echo "Cookie value: " . $_COOKIE['TestCookie'];
} else {
    echo "Cookie not set yet. Refresh the page.";
}
?>
OUTPUT:
Output (first load):
Cookie not set yet. Refresh the page.
Output (after refresh):
Cookie value: HelloCookie





